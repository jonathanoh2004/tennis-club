{
  "C:\\Users\\Jonathan\\Desktop\\projects\\tennis-club\\serverless.yml": {
    "versionFramework": "4.18.0",
    "servicePath": "C:\\Users\\Jonathan\\Desktop\\projects\\tennis-club\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "tennis-club-tracker",
      "frameworkVersion": "4",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "us-west-2",
        "stage": "dev",
        "environment": {
          "CLUBS_TABLE": "tennis-club-tracker-dev-Clubs",
          "MATCHES_TABLE": "tennis-club-tracker-dev-Matches",
          "USERS_TABLE": "tennis-club-tracker-dev-Users",
          "CONNECTIONS_TABLE": "tennis-club-tracker-dev-Connections"
        },
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "dynamodb:PutItem",
                  "dynamodb:GetItem",
                  "dynamodb:UpdateItem",
                  "dynamodb:DeleteItem",
                  "dynamodb:Query",
                  "dynamodb:Scan"
                ],
                "Resource": [
                  "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Clubs",
                  "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Matches",
                  "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Users",
                  "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Connections",
                  "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Matches/index/byClub",
                  "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Connections/index/byClub"
                ]
              },
              {
                "Effect": "Allow",
                "Action": [
                  "execute-api:ManageConnections"
                ],
                "Resource": "arn:aws:execute-api:us-west-2:047212758498:*/dev/@connections/*"
              }
            ]
          }
        },
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "GetClubsLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/tennis-club-tracker-dev-getClubs"
              }
            },
            "CreateMatchLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/tennis-club-tracker-dev-createMatch"
              }
            },
            "ListMatchesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/tennis-club-tracker-dev-listMatches"
              }
            },
            "WsConnectLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/tennis-club-tracker-dev-wsConnect"
              }
            },
            "WsDisconnectLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/tennis-club-tracker-dev-wsDisconnect"
              }
            },
            "WsDefaultLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/tennis-club-tracker-dev-wsDefault"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "tennis-club-tracker",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tennis-club-tracker-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tennis-club-tracker-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:PutItem",
                            "dynamodb:GetItem",
                            "dynamodb:UpdateItem",
                            "dynamodb:DeleteItem",
                            "dynamodb:Query",
                            "dynamodb:Scan"
                          ],
                          "Resource": [
                            "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Clubs",
                            "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Matches",
                            "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Users",
                            "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Connections",
                            "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Matches/index/byClub",
                            "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Connections/index/byClub"
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "execute-api:ManageConnections"
                          ],
                          "Resource": "arn:aws:execute-api:us-west-2:047212758498:*/dev/@connections/*"
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "execute-api:ManageConnections"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:execute-api:*:*:*/@connections/*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "tennis-club-tracker",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "GetClubsLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-west-2-50484812-2351",
                  "S3Key": "serverless/tennis-club-tracker/dev/1754804632301-2025-08-10T05:43:52.301Z/getClubs.zip"
                },
                "Handler": "backend/handlers/clubs.get",
                "Runtime": "nodejs20.x",
                "FunctionName": "tennis-club-tracker-dev-getClubs",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "CLUBS_TABLE": "tennis-club-tracker-dev-Clubs",
                    "MATCHES_TABLE": "tennis-club-tracker-dev-Matches",
                    "USERS_TABLE": "tennis-club-tracker-dev-Users",
                    "CONNECTIONS_TABLE": "tennis-club-tracker-dev-Connections"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetClubsLogGroup"
              ]
            },
            "CreateMatchLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-west-2-50484812-2351",
                  "S3Key": "serverless/tennis-club-tracker/dev/1754804632301-2025-08-10T05:43:52.301Z/createMatch.zip"
                },
                "Handler": "backend/handlers/matches.create",
                "Runtime": "nodejs20.x",
                "FunctionName": "tennis-club-tracker-dev-createMatch",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "CLUBS_TABLE": "tennis-club-tracker-dev-Clubs",
                    "MATCHES_TABLE": "tennis-club-tracker-dev-Matches",
                    "USERS_TABLE": "tennis-club-tracker-dev-Users",
                    "CONNECTIONS_TABLE": "tennis-club-tracker-dev-Connections"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CreateMatchLogGroup"
              ]
            },
            "ListMatchesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-west-2-50484812-2351",
                  "S3Key": "serverless/tennis-club-tracker/dev/1754804632301-2025-08-10T05:43:52.301Z/listMatches.zip"
                },
                "Handler": "backend/handlers/matches.list",
                "Runtime": "nodejs20.x",
                "FunctionName": "tennis-club-tracker-dev-listMatches",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "CLUBS_TABLE": "tennis-club-tracker-dev-Clubs",
                    "MATCHES_TABLE": "tennis-club-tracker-dev-Matches",
                    "USERS_TABLE": "tennis-club-tracker-dev-Users",
                    "CONNECTIONS_TABLE": "tennis-club-tracker-dev-Connections"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "ListMatchesLogGroup"
              ]
            },
            "WsConnectLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-west-2-50484812-2351",
                  "S3Key": "serverless/tennis-club-tracker/dev/1754804632301-2025-08-10T05:43:52.301Z/wsConnect.zip"
                },
                "Handler": "backend/handlers/websocket.connect",
                "Runtime": "nodejs20.x",
                "FunctionName": "tennis-club-tracker-dev-wsConnect",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "CLUBS_TABLE": "tennis-club-tracker-dev-Clubs",
                    "MATCHES_TABLE": "tennis-club-tracker-dev-Matches",
                    "USERS_TABLE": "tennis-club-tracker-dev-Users",
                    "CONNECTIONS_TABLE": "tennis-club-tracker-dev-Connections"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "WsConnectLogGroup"
              ]
            },
            "WsDisconnectLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-west-2-50484812-2351",
                  "S3Key": "serverless/tennis-club-tracker/dev/1754804632301-2025-08-10T05:43:52.301Z/wsDisconnect.zip"
                },
                "Handler": "backend/handlers/websocket.disconnect",
                "Runtime": "nodejs20.x",
                "FunctionName": "tennis-club-tracker-dev-wsDisconnect",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "CLUBS_TABLE": "tennis-club-tracker-dev-Clubs",
                    "MATCHES_TABLE": "tennis-club-tracker-dev-Matches",
                    "USERS_TABLE": "tennis-club-tracker-dev-Users",
                    "CONNECTIONS_TABLE": "tennis-club-tracker-dev-Connections"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "WsDisconnectLogGroup"
              ]
            },
            "WsDefaultLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-west-2-50484812-2351",
                  "S3Key": "serverless/tennis-club-tracker/dev/1754804632301-2025-08-10T05:43:52.301Z/wsDefault.zip"
                },
                "Handler": "backend/handlers/websocket.onMessage",
                "Runtime": "nodejs20.x",
                "FunctionName": "tennis-club-tracker-dev-wsDefault",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "CLUBS_TABLE": "tennis-club-tracker-dev-Clubs",
                    "MATCHES_TABLE": "tennis-club-tracker-dev-Matches",
                    "USERS_TABLE": "tennis-club-tracker-dev-Users",
                    "CONNECTIONS_TABLE": "tennis-club-tracker-dev-Connections"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "WsDefaultLogGroup"
              ]
            },
            "GetClubsLambdaVersionlILSQM0f8kup9YC5fVmnIRCgtNPXQy5fOn3ih0ibSPM": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetClubsLambdaFunction"
                },
                "CodeSha256": "9CjeQRCDiDN14pCog3k9NVu3DAKHgPtu/C+yMfa6crk="
              }
            },
            "CreateMatchLambdaVersionuIwL3hnLScIrNlyZ14Sx34rQkVTlC1K9qP51OI2H7o": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateMatchLambdaFunction"
                },
                "CodeSha256": "9CjeQRCDiDN14pCog3k9NVu3DAKHgPtu/C+yMfa6crk="
              }
            },
            "ListMatchesLambdaVersioneYQiGx3lEGCLPZlOgQmB7ZZ5MNL4jRcll8Kr1piMaU": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ListMatchesLambdaFunction"
                },
                "CodeSha256": "9CjeQRCDiDN14pCog3k9NVu3DAKHgPtu/C+yMfa6crk="
              }
            },
            "WsConnectLambdaVersioncp2idmDHmnHHumuSmLjViAtKxU7zUBe2iuHqr4UyI": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "WsConnectLambdaFunction"
                },
                "CodeSha256": "9CjeQRCDiDN14pCog3k9NVu3DAKHgPtu/C+yMfa6crk="
              }
            },
            "WsDefaultLambdaVersionYtzkqeZ4Bcw1UELysIuFph4tIUr0v6WXxKSFziOXY": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "WsDefaultLambdaFunction"
                },
                "CodeSha256": "9CjeQRCDiDN14pCog3k9NVu3DAKHgPtu/C+yMfa6crk="
              }
            },
            "WsDisconnectLambdaVersionEB49C9yxmAPrtxEVFN9NotyGhsmnGVPkaKxvMUKb6d4": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "WsDisconnectLambdaFunction"
                },
                "CodeSha256": "9CjeQRCDiDN14pCog3k9NVu3DAKHgPtu/C+yMfa6crk="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-tennis-club-tracker",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceClubs": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "clubs",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceMatches": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "matches",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodClubsOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceClubs"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodMatchesOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceMatches"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodClubsGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceClubs"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetClubsLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetClubsLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodMatchesPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceMatches"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CreateMatchLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CreateMatchLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodMatchesGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceMatches"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ListMatchesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ListMatchesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1754804619028": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodClubsOptions",
                "ApiGatewayMethodMatchesOptions",
                "ApiGatewayMethodClubsGet",
                "ApiGatewayMethodMatchesPost",
                "ApiGatewayMethodMatchesGet"
              ]
            },
            "GetClubsLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetClubsLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "CreateMatchLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateMatchLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "ListMatchesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ListMatchesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "WebsocketsApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-tennis-club-tracker-websockets",
                "RouteSelectionExpression": "$request.body.action",
                "Description": "Serverless Websockets",
                "ProtocolType": "WEBSOCKET"
              }
            },
            "WsConnectWebsocketsIntegration": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "WebsocketsApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "WsConnectLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              }
            },
            "WsDisconnectWebsocketsIntegration": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "WebsocketsApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "WsDisconnectLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              }
            },
            "WsDefaultWebsocketsIntegration": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "WebsocketsApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "WsDefaultLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              }
            },
            "WsConnectLambdaPermissionWebsockets": {
              "Type": "AWS::Lambda::Permission",
              "DependsOn": [
                "WebsocketsApi",
                "WsConnectLambdaFunction"
              ],
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "WsConnectLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com"
              }
            },
            "WsDisconnectLambdaPermissionWebsockets": {
              "Type": "AWS::Lambda::Permission",
              "DependsOn": [
                "WebsocketsApi",
                "WsDisconnectLambdaFunction"
              ],
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "WsDisconnectLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com"
              }
            },
            "WsDefaultLambdaPermissionWebsockets": {
              "Type": "AWS::Lambda::Permission",
              "DependsOn": [
                "WebsocketsApi",
                "WsDefaultLambdaFunction"
              ],
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "WsDefaultLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com"
              }
            },
            "SconnectWebsocketsRoute": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "WebsocketsApi"
                },
                "RouteKey": "$connect",
                "AuthorizationType": "NONE",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "WsConnectWebsocketsIntegration"
                      }
                    ]
                  ]
                }
              }
            },
            "SdisconnectWebsocketsRoute": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "WebsocketsApi"
                },
                "RouteKey": "$disconnect",
                "AuthorizationType": "NONE",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "WsDisconnectWebsocketsIntegration"
                      }
                    ]
                  ]
                }
              }
            },
            "SdefaultWebsocketsRoute": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "WebsocketsApi"
                },
                "RouteKey": "$default",
                "AuthorizationType": "NONE",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "WsDefaultWebsocketsIntegration"
                      }
                    ]
                  ]
                }
              }
            },
            "WebsocketsDeploymentStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "WebsocketsApi"
                },
                "StageName": "dev",
                "Description": "Serverless Websockets",
                "DeploymentId": {
                  "Ref": "WebsocketsDeploymentgLhOv36Uvzqz0C2qpcUpmUlblqvIxx2UXkz3nqHd0"
                }
              }
            },
            "WebsocketsDeploymentgLhOv36Uvzqz0C2qpcUpmUlblqvIxx2UXkz3nqHd0": {
              "Type": "AWS::ApiGatewayV2::Deployment",
              "DependsOn": [
                "SconnectWebsocketsRoute",
                "SdisconnectWebsocketsRoute",
                "SdefaultWebsocketsRoute"
              ],
              "Properties": {
                "ApiId": {
                  "Ref": "WebsocketsApi"
                },
                "Description": "Serverless Websockets"
              }
            },
            "ClubsTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "tennis-club-tracker-dev-Clubs",
                "BillingMode": "PAY_PER_REQUEST",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "clubId",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "clubId",
                    "KeyType": "HASH"
                  }
                ]
              }
            },
            "UsersTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "tennis-club-tracker-dev-Users",
                "BillingMode": "PAY_PER_REQUEST",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "userId",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "userId",
                    "KeyType": "HASH"
                  }
                ]
              }
            },
            "MatchesTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "tennis-club-tracker-dev-Matches",
                "BillingMode": "PAY_PER_REQUEST",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "matchId",
                    "AttributeType": "S"
                  },
                  {
                    "AttributeName": "clubId",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "matchId",
                    "KeyType": "HASH"
                  }
                ],
                "GlobalSecondaryIndexes": [
                  {
                    "IndexName": "byClub",
                    "KeySchema": [
                      {
                        "AttributeName": "clubId",
                        "KeyType": "HASH"
                      }
                    ],
                    "Projection": {
                      "ProjectionType": "ALL"
                    }
                  }
                ]
              }
            },
            "ConnectionsTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "tennis-club-tracker-dev-Connections",
                "BillingMode": "PAY_PER_REQUEST",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "connectionId",
                    "AttributeType": "S"
                  },
                  {
                    "AttributeName": "clubId",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "connectionId",
                    "KeyType": "HASH"
                  }
                ],
                "GlobalSecondaryIndexes": [
                  {
                    "IndexName": "byClub",
                    "KeySchema": [
                      {
                        "AttributeName": "clubId",
                        "KeyType": "HASH"
                      }
                    ],
                    "Projection": {
                      "ProjectionType": "ALL"
                    }
                  }
                ]
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-west-2-50484812-2351",
              "Export": {
                "Name": "sls-tennis-club-tracker-dev-ServerlessDeploymentBucketName"
              }
            },
            "GetClubsLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetClubsLambdaVersionlILSQM0f8kup9YC5fVmnIRCgtNPXQy5fOn3ih0ibSPM"
              },
              "Export": {
                "Name": "sls-tennis-club-tracker-dev-GetClubsLambdaFunctionQualifiedArn"
              }
            },
            "CreateMatchLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateMatchLambdaVersionuIwL3hnLScIrNlyZ14Sx34rQkVTlC1K9qP51OI2H7o"
              },
              "Export": {
                "Name": "sls-tennis-club-tracker-dev-CreateMatchLambdaFunctionQualifiedArn"
              }
            },
            "ListMatchesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ListMatchesLambdaVersioneYQiGx3lEGCLPZlOgQmB7ZZ5MNL4jRcll8Kr1piMaU"
              },
              "Export": {
                "Name": "sls-tennis-club-tracker-dev-ListMatchesLambdaFunctionQualifiedArn"
              }
            },
            "WsConnectLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "WsConnectLambdaVersioncp2idmDHmnHHumuSmLjViAtKxU7zUBe2iuHqr4UyI"
              },
              "Export": {
                "Name": "sls-tennis-club-tracker-dev-WsConnectLambdaFunctionQualifiedArn"
              }
            },
            "WsDefaultLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "WsDefaultLambdaVersionYtzkqeZ4Bcw1UELysIuFph4tIUr0v6WXxKSFziOXY"
              },
              "Export": {
                "Name": "sls-tennis-club-tracker-dev-WsDefaultLambdaFunctionQualifiedArn"
              }
            },
            "WsDisconnectLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "WsDisconnectLambdaVersionEB49C9yxmAPrtxEVFN9NotyGhsmnGVPkaKxvMUKb6d4"
              },
              "Export": {
                "Name": "sls-tennis-club-tracker-dev-WsDisconnectLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-tennis-club-tracker-dev-ServiceEndpoint"
              }
            },
            "ServiceEndpointWebsocket": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "wss://",
                    {
                      "Ref": "WebsocketsApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-tennis-club-tracker-dev-ServiceEndpointWebsocket"
              }
            }
          }
        },
        "vpc": {}
      },
      "package": {
        "individually": true,
        "patterns": [
          "!**/*",
          "backend/**"
        ],
        "artifactsS3KeyDirname": "serverless/tennis-club-tracker/dev/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-us-west-2-50484812-2351",
        "artifactDirectoryName": "serverless/tennis-club-tracker/dev/1754804632301-2025-08-10T05:43:52.301Z"
      },
      "functions": {
        "getClubs": {
          "handler": "backend/handlers/clubs.get",
          "events": [
            {
              "http": {
                "path": "clubs",
                "method": "get",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "tennis-club-tracker-dev-getClubs",
          "package": {
            "artifact": ".serverless\\getClubs.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetClubsLambdaVersionlILSQM0f8kup9YC5fVmnIRCgtNPXQy5fOn3ih0ibSPM"
        },
        "createMatch": {
          "handler": "backend/handlers/matches.create",
          "events": [
            {
              "http": {
                "path": "matches",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "tennis-club-tracker-dev-createMatch",
          "package": {
            "artifact": ".serverless\\createMatch.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "CreateMatchLambdaVersionuIwL3hnLScIrNlyZ14Sx34rQkVTlC1K9qP51OI2H7o"
        },
        "listMatches": {
          "handler": "backend/handlers/matches.list",
          "events": [
            {
              "http": {
                "path": "matches",
                "method": "get",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "tennis-club-tracker-dev-listMatches",
          "package": {
            "artifact": ".serverless\\listMatches.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "ListMatchesLambdaVersioneYQiGx3lEGCLPZlOgQmB7ZZ5MNL4jRcll8Kr1piMaU"
        },
        "wsConnect": {
          "handler": "backend/handlers/websocket.connect",
          "events": [
            {
              "websocket": {
                "route": "$connect"
              }
            }
          ],
          "name": "tennis-club-tracker-dev-wsConnect",
          "package": {
            "artifact": ".serverless\\wsConnect.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "WsConnectLambdaVersioncp2idmDHmnHHumuSmLjViAtKxU7zUBe2iuHqr4UyI"
        },
        "wsDisconnect": {
          "handler": "backend/handlers/websocket.disconnect",
          "events": [
            {
              "websocket": {
                "route": "$disconnect"
              }
            }
          ],
          "name": "tennis-club-tracker-dev-wsDisconnect",
          "package": {
            "artifact": ".serverless\\wsDisconnect.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "WsDisconnectLambdaVersionEB49C9yxmAPrtxEVFN9NotyGhsmnGVPkaKxvMUKb6d4"
        },
        "wsDefault": {
          "handler": "backend/handlers/websocket.onMessage",
          "events": [
            {
              "websocket": {
                "route": "$default"
              }
            }
          ],
          "name": "tennis-club-tracker-dev-wsDefault",
          "package": {
            "artifact": ".serverless\\wsDefault.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "WsDefaultLambdaVersionYtzkqeZ4Bcw1UELysIuFph4tIUr0v6WXxKSFziOXY"
        }
      },
      "resources": {
        "Resources": {
          "ClubsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "tennis-club-tracker-dev-Clubs",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "clubId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "clubId",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "UsersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "tennis-club-tracker-dev-Users",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "MatchesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "tennis-club-tracker-dev-Matches",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "matchId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "clubId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "matchId",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "byClub",
                  "KeySchema": [
                    {
                      "AttributeName": "clubId",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          },
          "ConnectionsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "tennis-club-tracker-dev-Connections",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "connectionId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "clubId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "connectionId",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "byClub",
                  "KeySchema": [
                    {
                      "AttributeName": "clubId",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          }
        },
        "Outputs": {}
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "region": "us-west-2",
      "stage": "dev",
      "environment": {
        "CLUBS_TABLE": "tennis-club-tracker-dev-Clubs",
        "MATCHES_TABLE": "tennis-club-tracker-dev-Matches",
        "USERS_TABLE": "tennis-club-tracker-dev-Users",
        "CONNECTIONS_TABLE": "tennis-club-tracker-dev-Connections"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:PutItem",
                "dynamodb:GetItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:Query",
                "dynamodb:Scan"
              ],
              "Resource": [
                "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Clubs",
                "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Matches",
                "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Users",
                "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Connections",
                "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Matches/index/byClub",
                "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Connections/index/byClub"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "execute-api:ManageConnections"
              ],
              "Resource": "arn:aws:execute-api:us-west-2:047212758498:*/dev/@connections/*"
            }
          ]
        }
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "GetClubsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/tennis-club-tracker-dev-getClubs"
            }
          },
          "CreateMatchLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/tennis-club-tracker-dev-createMatch"
            }
          },
          "ListMatchesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/tennis-club-tracker-dev-listMatches"
            }
          },
          "WsConnectLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/tennis-club-tracker-dev-wsConnect"
            }
          },
          "WsDisconnectLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/tennis-club-tracker-dev-wsDisconnect"
            }
          },
          "WsDefaultLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/tennis-club-tracker-dev-wsDefault"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "tennis-club-tracker",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tennis-club-tracker-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tennis-club-tracker-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem",
                          "dynamodb:GetItem",
                          "dynamodb:UpdateItem",
                          "dynamodb:DeleteItem",
                          "dynamodb:Query",
                          "dynamodb:Scan"
                        ],
                        "Resource": [
                          "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Clubs",
                          "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Matches",
                          "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Users",
                          "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Connections",
                          "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Matches/index/byClub",
                          "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Connections/index/byClub"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "execute-api:ManageConnections"
                        ],
                        "Resource": "arn:aws:execute-api:us-west-2:047212758498:*/dev/@connections/*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "execute-api:ManageConnections"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:execute-api:*:*:*/@connections/*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "tennis-club-tracker",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GetClubsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-west-2-50484812-2351",
                "S3Key": "serverless/tennis-club-tracker/dev/1754804632301-2025-08-10T05:43:52.301Z/getClubs.zip"
              },
              "Handler": "backend/handlers/clubs.get",
              "Runtime": "nodejs20.x",
              "FunctionName": "tennis-club-tracker-dev-getClubs",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CLUBS_TABLE": "tennis-club-tracker-dev-Clubs",
                  "MATCHES_TABLE": "tennis-club-tracker-dev-Matches",
                  "USERS_TABLE": "tennis-club-tracker-dev-Users",
                  "CONNECTIONS_TABLE": "tennis-club-tracker-dev-Connections"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetClubsLogGroup"
            ]
          },
          "CreateMatchLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-west-2-50484812-2351",
                "S3Key": "serverless/tennis-club-tracker/dev/1754804632301-2025-08-10T05:43:52.301Z/createMatch.zip"
              },
              "Handler": "backend/handlers/matches.create",
              "Runtime": "nodejs20.x",
              "FunctionName": "tennis-club-tracker-dev-createMatch",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CLUBS_TABLE": "tennis-club-tracker-dev-Clubs",
                  "MATCHES_TABLE": "tennis-club-tracker-dev-Matches",
                  "USERS_TABLE": "tennis-club-tracker-dev-Users",
                  "CONNECTIONS_TABLE": "tennis-club-tracker-dev-Connections"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateMatchLogGroup"
            ]
          },
          "ListMatchesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-west-2-50484812-2351",
                "S3Key": "serverless/tennis-club-tracker/dev/1754804632301-2025-08-10T05:43:52.301Z/listMatches.zip"
              },
              "Handler": "backend/handlers/matches.list",
              "Runtime": "nodejs20.x",
              "FunctionName": "tennis-club-tracker-dev-listMatches",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CLUBS_TABLE": "tennis-club-tracker-dev-Clubs",
                  "MATCHES_TABLE": "tennis-club-tracker-dev-Matches",
                  "USERS_TABLE": "tennis-club-tracker-dev-Users",
                  "CONNECTIONS_TABLE": "tennis-club-tracker-dev-Connections"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ListMatchesLogGroup"
            ]
          },
          "WsConnectLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-west-2-50484812-2351",
                "S3Key": "serverless/tennis-club-tracker/dev/1754804632301-2025-08-10T05:43:52.301Z/wsConnect.zip"
              },
              "Handler": "backend/handlers/websocket.connect",
              "Runtime": "nodejs20.x",
              "FunctionName": "tennis-club-tracker-dev-wsConnect",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CLUBS_TABLE": "tennis-club-tracker-dev-Clubs",
                  "MATCHES_TABLE": "tennis-club-tracker-dev-Matches",
                  "USERS_TABLE": "tennis-club-tracker-dev-Users",
                  "CONNECTIONS_TABLE": "tennis-club-tracker-dev-Connections"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "WsConnectLogGroup"
            ]
          },
          "WsDisconnectLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-west-2-50484812-2351",
                "S3Key": "serverless/tennis-club-tracker/dev/1754804632301-2025-08-10T05:43:52.301Z/wsDisconnect.zip"
              },
              "Handler": "backend/handlers/websocket.disconnect",
              "Runtime": "nodejs20.x",
              "FunctionName": "tennis-club-tracker-dev-wsDisconnect",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CLUBS_TABLE": "tennis-club-tracker-dev-Clubs",
                  "MATCHES_TABLE": "tennis-club-tracker-dev-Matches",
                  "USERS_TABLE": "tennis-club-tracker-dev-Users",
                  "CONNECTIONS_TABLE": "tennis-club-tracker-dev-Connections"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "WsDisconnectLogGroup"
            ]
          },
          "WsDefaultLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-west-2-50484812-2351",
                "S3Key": "serverless/tennis-club-tracker/dev/1754804632301-2025-08-10T05:43:52.301Z/wsDefault.zip"
              },
              "Handler": "backend/handlers/websocket.onMessage",
              "Runtime": "nodejs20.x",
              "FunctionName": "tennis-club-tracker-dev-wsDefault",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CLUBS_TABLE": "tennis-club-tracker-dev-Clubs",
                  "MATCHES_TABLE": "tennis-club-tracker-dev-Matches",
                  "USERS_TABLE": "tennis-club-tracker-dev-Users",
                  "CONNECTIONS_TABLE": "tennis-club-tracker-dev-Connections"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "WsDefaultLogGroup"
            ]
          },
          "GetClubsLambdaVersionlILSQM0f8kup9YC5fVmnIRCgtNPXQy5fOn3ih0ibSPM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetClubsLambdaFunction"
              },
              "CodeSha256": "9CjeQRCDiDN14pCog3k9NVu3DAKHgPtu/C+yMfa6crk="
            }
          },
          "CreateMatchLambdaVersionuIwL3hnLScIrNlyZ14Sx34rQkVTlC1K9qP51OI2H7o": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateMatchLambdaFunction"
              },
              "CodeSha256": "9CjeQRCDiDN14pCog3k9NVu3DAKHgPtu/C+yMfa6crk="
            }
          },
          "ListMatchesLambdaVersioneYQiGx3lEGCLPZlOgQmB7ZZ5MNL4jRcll8Kr1piMaU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListMatchesLambdaFunction"
              },
              "CodeSha256": "9CjeQRCDiDN14pCog3k9NVu3DAKHgPtu/C+yMfa6crk="
            }
          },
          "WsConnectLambdaVersioncp2idmDHmnHHumuSmLjViAtKxU7zUBe2iuHqr4UyI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WsConnectLambdaFunction"
              },
              "CodeSha256": "9CjeQRCDiDN14pCog3k9NVu3DAKHgPtu/C+yMfa6crk="
            }
          },
          "WsDefaultLambdaVersionYtzkqeZ4Bcw1UELysIuFph4tIUr0v6WXxKSFziOXY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WsDefaultLambdaFunction"
              },
              "CodeSha256": "9CjeQRCDiDN14pCog3k9NVu3DAKHgPtu/C+yMfa6crk="
            }
          },
          "WsDisconnectLambdaVersionEB49C9yxmAPrtxEVFN9NotyGhsmnGVPkaKxvMUKb6d4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WsDisconnectLambdaFunction"
              },
              "CodeSha256": "9CjeQRCDiDN14pCog3k9NVu3DAKHgPtu/C+yMfa6crk="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-tennis-club-tracker",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceClubs": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "clubs",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceMatches": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "matches",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodClubsOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceClubs"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodMatchesOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceMatches"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodClubsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceClubs"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetClubsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetClubsLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodMatchesPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceMatches"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateMatchLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateMatchLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodMatchesGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceMatches"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ListMatchesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ListMatchesLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1754804619028": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodClubsOptions",
              "ApiGatewayMethodMatchesOptions",
              "ApiGatewayMethodClubsGet",
              "ApiGatewayMethodMatchesPost",
              "ApiGatewayMethodMatchesGet"
            ]
          },
          "GetClubsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetClubsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateMatchLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateMatchLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ListMatchesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListMatchesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "WebsocketsApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-tennis-club-tracker-websockets",
              "RouteSelectionExpression": "$request.body.action",
              "Description": "Serverless Websockets",
              "ProtocolType": "WEBSOCKET"
            }
          },
          "WsConnectWebsocketsIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "WsConnectLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            }
          },
          "WsDisconnectWebsocketsIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "WsDisconnectLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            }
          },
          "WsDefaultWebsocketsIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "WsDefaultLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            }
          },
          "WsConnectLambdaPermissionWebsockets": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
              "WebsocketsApi",
              "WsConnectLambdaFunction"
            ],
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WsConnectLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "WsDisconnectLambdaPermissionWebsockets": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
              "WebsocketsApi",
              "WsDisconnectLambdaFunction"
            ],
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WsDisconnectLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "WsDefaultLambdaPermissionWebsockets": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
              "WebsocketsApi",
              "WsDefaultLambdaFunction"
            ],
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WsDefaultLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "SconnectWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "$connect",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "WsConnectWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "SdisconnectWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "$disconnect",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "WsDisconnectWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "SdefaultWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "$default",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "WsDefaultWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "WebsocketsDeploymentStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "StageName": "dev",
              "Description": "Serverless Websockets",
              "DeploymentId": {
                "Ref": "WebsocketsDeploymentgLhOv36Uvzqz0C2qpcUpmUlblqvIxx2UXkz3nqHd0"
              }
            }
          },
          "WebsocketsDeploymentgLhOv36Uvzqz0C2qpcUpmUlblqvIxx2UXkz3nqHd0": {
            "Type": "AWS::ApiGatewayV2::Deployment",
            "DependsOn": [
              "SconnectWebsocketsRoute",
              "SdisconnectWebsocketsRoute",
              "SdefaultWebsocketsRoute"
            ],
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "Description": "Serverless Websockets"
            }
          },
          "ClubsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "tennis-club-tracker-dev-Clubs",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "clubId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "clubId",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "UsersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "tennis-club-tracker-dev-Users",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "MatchesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "tennis-club-tracker-dev-Matches",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "matchId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "clubId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "matchId",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "byClub",
                  "KeySchema": [
                    {
                      "AttributeName": "clubId",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          },
          "ConnectionsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "tennis-club-tracker-dev-Connections",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "connectionId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "clubId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "connectionId",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "byClub",
                  "KeySchema": [
                    {
                      "AttributeName": "clubId",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-west-2-50484812-2351",
            "Export": {
              "Name": "sls-tennis-club-tracker-dev-ServerlessDeploymentBucketName"
            }
          },
          "GetClubsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetClubsLambdaVersionlILSQM0f8kup9YC5fVmnIRCgtNPXQy5fOn3ih0ibSPM"
            },
            "Export": {
              "Name": "sls-tennis-club-tracker-dev-GetClubsLambdaFunctionQualifiedArn"
            }
          },
          "CreateMatchLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateMatchLambdaVersionuIwL3hnLScIrNlyZ14Sx34rQkVTlC1K9qP51OI2H7o"
            },
            "Export": {
              "Name": "sls-tennis-club-tracker-dev-CreateMatchLambdaFunctionQualifiedArn"
            }
          },
          "ListMatchesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListMatchesLambdaVersioneYQiGx3lEGCLPZlOgQmB7ZZ5MNL4jRcll8Kr1piMaU"
            },
            "Export": {
              "Name": "sls-tennis-club-tracker-dev-ListMatchesLambdaFunctionQualifiedArn"
            }
          },
          "WsConnectLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WsConnectLambdaVersioncp2idmDHmnHHumuSmLjViAtKxU7zUBe2iuHqr4UyI"
            },
            "Export": {
              "Name": "sls-tennis-club-tracker-dev-WsConnectLambdaFunctionQualifiedArn"
            }
          },
          "WsDefaultLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WsDefaultLambdaVersionYtzkqeZ4Bcw1UELysIuFph4tIUr0v6WXxKSFziOXY"
            },
            "Export": {
              "Name": "sls-tennis-club-tracker-dev-WsDefaultLambdaFunctionQualifiedArn"
            }
          },
          "WsDisconnectLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WsDisconnectLambdaVersionEB49C9yxmAPrtxEVFN9NotyGhsmnGVPkaKxvMUKb6d4"
            },
            "Export": {
              "Name": "sls-tennis-club-tracker-dev-WsDisconnectLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-tennis-club-tracker-dev-ServiceEndpoint"
            }
          },
          "ServiceEndpointWebsocket": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "wss://",
                  {
                    "Ref": "WebsocketsApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-tennis-club-tracker-dev-ServiceEndpointWebsocket"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: tennis-club-tracker\r\nframeworkVersion: \"4\"\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs20.x\r\n  region: us-west-2\r\n  stage: dev\r\n  environment:\r\n    CLUBS_TABLE: ${self:service}-${sls:stage}-Clubs\r\n    MATCHES_TABLE: ${self:service}-${sls:stage}-Matches\r\n    USERS_TABLE: ${self:service}-${sls:stage}-Users\r\n    CONNECTIONS_TABLE: ${self:service}-${sls:stage}-Connections\r\n  iam:\r\n    role:\r\n      statements:\r\n        - Effect: Allow\r\n          Action:\r\n            - dynamodb:PutItem\r\n            - dynamodb:GetItem\r\n            - dynamodb:UpdateItem\r\n            - dynamodb:DeleteItem\r\n            - dynamodb:Query\r\n            - dynamodb:Scan\r\n          Resource:\r\n            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.CLUBS_TABLE}\r\n            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.MATCHES_TABLE}\r\n            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.USERS_TABLE}\r\n            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.CONNECTIONS_TABLE}\r\n            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.MATCHES_TABLE}/index/byClub\r\n            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.CONNECTIONS_TABLE}/index/byClub\r\n        - Effect: Allow\r\n          Action:\r\n            - execute-api:ManageConnections\r\n          Resource:\r\n            - arn:aws:execute-api:${aws:region}:${aws:accountId}:*/${sls:stage}/@connections/*\r\n\r\npackage:\r\n  individually: true\r\n  patterns:\r\n    - \"!**/*\"\r\n    - \"backend/**\"\r\n\r\nfunctions:\r\n  getClubs:\r\n    handler: backend/handlers/clubs.get\r\n    events:\r\n      - http:\r\n          path: clubs\r\n          method: get\r\n          cors: true\r\n\r\n  createMatch:\r\n    handler: backend/handlers/matches.create\r\n    events:\r\n      - http:\r\n          path: matches\r\n          method: post\r\n          cors: true\r\n\r\n  listMatches:\r\n    handler: backend/handlers/matches.list\r\n    events:\r\n      - http:\r\n          path: matches\r\n          method: get\r\n          cors: true\r\n\r\n  wsConnect:\r\n    handler: backend/handlers/websocket.connect\r\n    events:\r\n      - websocket:\r\n          route: $connect\r\n\r\n  wsDisconnect:\r\n    handler: backend/handlers/websocket.disconnect\r\n    events:\r\n      - websocket:\r\n          route: $disconnect\r\n\r\n  wsDefault:\r\n    handler: backend/handlers/websocket.onMessage\r\n    events:\r\n      - websocket:\r\n          route: $default\r\n\r\nresources:\r\n  Resources:\r\n    ClubsTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: ${self:provider.environment.CLUBS_TABLE}\r\n        BillingMode: PAY_PER_REQUEST\r\n        AttributeDefinitions:\r\n          - AttributeName: clubId\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: clubId\r\n            KeyType: HASH\r\n\r\n    UsersTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: ${self:provider.environment.USERS_TABLE}\r\n        BillingMode: PAY_PER_REQUEST\r\n        AttributeDefinitions:\r\n          - AttributeName: userId\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: userId\r\n            KeyType: HASH\r\n\r\n    MatchesTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: ${self:provider.environment.MATCHES_TABLE}\r\n        BillingMode: PAY_PER_REQUEST\r\n        AttributeDefinitions:\r\n          - AttributeName: matchId\r\n            AttributeType: S\r\n          - AttributeName: clubId\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: matchId\r\n            KeyType: HASH\r\n        GlobalSecondaryIndexes:\r\n          - IndexName: byClub\r\n            KeySchema:\r\n              - AttributeName: clubId\r\n                KeyType: HASH\r\n            Projection:\r\n              ProjectionType: ALL\r\n\r\n    ConnectionsTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: ${self:provider.environment.CONNECTIONS_TABLE}\r\n        BillingMode: PAY_PER_REQUEST\r\n        AttributeDefinitions:\r\n          - AttributeName: connectionId\r\n            AttributeType: S\r\n          - AttributeName: clubId\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: connectionId\r\n            KeyType: HASH\r\n        GlobalSecondaryIndexes:\r\n          - IndexName: byClub\r\n            KeySchema:\r\n              - AttributeName: clubId\r\n                KeyType: HASH\r\n            Projection:\r\n              ProjectionType: ALL\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "10bb995e-684d-462c-94d3-b218f99288a9",
    "orgName": "jaysohcode",
    "userId": "sZJ5HGGGmCd9zcBFxV",
    "userName": "jaysohcode",
    "serviceProviderAwsAccountId": "047212758498",
    "serviceProviderAwsCfStackName": "tennis-club-tracker-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-west-2:047212758498:stack/tennis-club-tracker-dev/ff704d60-75ac-11f0-8fa9-0a13a4d37ce1",
    "serviceProviderAwsCfStackCreated": "2025-08-10T05:43:53.223Z",
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": "CREATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "CreateMatchLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-west-2:047212758498:function:tennis-club-tracker-dev-createMatch:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-tennis-club-tracker-dev-CreateMatchLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "WsDefaultLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-west-2:047212758498:function:tennis-club-tracker-dev-wsDefault:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-tennis-club-tracker-dev-WsDefaultLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "WsDisconnectLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-west-2:047212758498:function:tennis-club-tracker-dev-wsDisconnect:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-tennis-club-tracker-dev-WsDisconnectLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ListMatchesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-west-2:047212758498:function:tennis-club-tracker-dev-listMatches:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-tennis-club-tracker-dev-ListMatchesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "WsConnectLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-west-2:047212758498:function:tennis-club-tracker-dev-wsConnect:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-tennis-club-tracker-dev-WsConnectLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://r9521m884k.execute-api.us-west-2.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-tennis-club-tracker-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServiceEndpointWebsocket",
        "OutputValue": "wss://pzewo98x2m.execute-api.us-west-2.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-tennis-club-tracker-dev-ServiceEndpointWebsocket"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-west-2-50484812-2351",
        "ExportName": "sls-tennis-club-tracker-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "GetClubsLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-west-2:047212758498:function:tennis-club-tracker-dev-getClubs:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-tennis-club-tracker-dev-GetClubsLambdaFunctionQualifiedArn"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "GetClubsLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/tennis-club-tracker-dev-getClubs"
          }
        },
        "CreateMatchLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/tennis-club-tracker-dev-createMatch"
          }
        },
        "ListMatchesLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/tennis-club-tracker-dev-listMatches"
          }
        },
        "WsConnectLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/tennis-club-tracker-dev-wsConnect"
          }
        },
        "WsDisconnectLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/tennis-club-tracker-dev-wsDisconnect"
          }
        },
        "WsDefaultLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/tennis-club-tracker-dev-wsDefault"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "tennis-club-tracker",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tennis-club-tracker-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tennis-club-tracker-dev*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:PutItem",
                        "dynamodb:GetItem",
                        "dynamodb:UpdateItem",
                        "dynamodb:DeleteItem",
                        "dynamodb:Query",
                        "dynamodb:Scan"
                      ],
                      "Resource": [
                        "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Clubs",
                        "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Matches",
                        "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Users",
                        "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Connections",
                        "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Matches/index/byClub",
                        "arn:aws:dynamodb:us-west-2:047212758498:table/tennis-club-tracker-dev-Connections/index/byClub"
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "execute-api:ManageConnections"
                      ],
                      "Resource": "arn:aws:execute-api:us-west-2:047212758498:*/dev/@connections/*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "execute-api:ManageConnections"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:execute-api:*:*:*/@connections/*"
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "tennis-club-tracker",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "GetClubsLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-west-2-50484812-2351",
              "S3Key": "serverless/tennis-club-tracker/dev/1754804632301-2025-08-10T05:43:52.301Z/getClubs.zip"
            },
            "Handler": "backend/handlers/clubs.get",
            "Runtime": "nodejs20.x",
            "FunctionName": "tennis-club-tracker-dev-getClubs",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "CLUBS_TABLE": "tennis-club-tracker-dev-Clubs",
                "MATCHES_TABLE": "tennis-club-tracker-dev-Matches",
                "USERS_TABLE": "tennis-club-tracker-dev-Users",
                "CONNECTIONS_TABLE": "tennis-club-tracker-dev-Connections"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "GetClubsLogGroup"
          ]
        },
        "CreateMatchLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-west-2-50484812-2351",
              "S3Key": "serverless/tennis-club-tracker/dev/1754804632301-2025-08-10T05:43:52.301Z/createMatch.zip"
            },
            "Handler": "backend/handlers/matches.create",
            "Runtime": "nodejs20.x",
            "FunctionName": "tennis-club-tracker-dev-createMatch",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "CLUBS_TABLE": "tennis-club-tracker-dev-Clubs",
                "MATCHES_TABLE": "tennis-club-tracker-dev-Matches",
                "USERS_TABLE": "tennis-club-tracker-dev-Users",
                "CONNECTIONS_TABLE": "tennis-club-tracker-dev-Connections"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "CreateMatchLogGroup"
          ]
        },
        "ListMatchesLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-west-2-50484812-2351",
              "S3Key": "serverless/tennis-club-tracker/dev/1754804632301-2025-08-10T05:43:52.301Z/listMatches.zip"
            },
            "Handler": "backend/handlers/matches.list",
            "Runtime": "nodejs20.x",
            "FunctionName": "tennis-club-tracker-dev-listMatches",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "CLUBS_TABLE": "tennis-club-tracker-dev-Clubs",
                "MATCHES_TABLE": "tennis-club-tracker-dev-Matches",
                "USERS_TABLE": "tennis-club-tracker-dev-Users",
                "CONNECTIONS_TABLE": "tennis-club-tracker-dev-Connections"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "ListMatchesLogGroup"
          ]
        },
        "WsConnectLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-west-2-50484812-2351",
              "S3Key": "serverless/tennis-club-tracker/dev/1754804632301-2025-08-10T05:43:52.301Z/wsConnect.zip"
            },
            "Handler": "backend/handlers/websocket.connect",
            "Runtime": "nodejs20.x",
            "FunctionName": "tennis-club-tracker-dev-wsConnect",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "CLUBS_TABLE": "tennis-club-tracker-dev-Clubs",
                "MATCHES_TABLE": "tennis-club-tracker-dev-Matches",
                "USERS_TABLE": "tennis-club-tracker-dev-Users",
                "CONNECTIONS_TABLE": "tennis-club-tracker-dev-Connections"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "WsConnectLogGroup"
          ]
        },
        "WsDisconnectLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-west-2-50484812-2351",
              "S3Key": "serverless/tennis-club-tracker/dev/1754804632301-2025-08-10T05:43:52.301Z/wsDisconnect.zip"
            },
            "Handler": "backend/handlers/websocket.disconnect",
            "Runtime": "nodejs20.x",
            "FunctionName": "tennis-club-tracker-dev-wsDisconnect",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "CLUBS_TABLE": "tennis-club-tracker-dev-Clubs",
                "MATCHES_TABLE": "tennis-club-tracker-dev-Matches",
                "USERS_TABLE": "tennis-club-tracker-dev-Users",
                "CONNECTIONS_TABLE": "tennis-club-tracker-dev-Connections"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "WsDisconnectLogGroup"
          ]
        },
        "WsDefaultLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-west-2-50484812-2351",
              "S3Key": "serverless/tennis-club-tracker/dev/1754804632301-2025-08-10T05:43:52.301Z/wsDefault.zip"
            },
            "Handler": "backend/handlers/websocket.onMessage",
            "Runtime": "nodejs20.x",
            "FunctionName": "tennis-club-tracker-dev-wsDefault",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "CLUBS_TABLE": "tennis-club-tracker-dev-Clubs",
                "MATCHES_TABLE": "tennis-club-tracker-dev-Matches",
                "USERS_TABLE": "tennis-club-tracker-dev-Users",
                "CONNECTIONS_TABLE": "tennis-club-tracker-dev-Connections"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "WsDefaultLogGroup"
          ]
        },
        "GetClubsLambdaVersionlILSQM0f8kup9YC5fVmnIRCgtNPXQy5fOn3ih0ibSPM": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "GetClubsLambdaFunction"
            },
            "CodeSha256": "9CjeQRCDiDN14pCog3k9NVu3DAKHgPtu/C+yMfa6crk="
          }
        },
        "CreateMatchLambdaVersionuIwL3hnLScIrNlyZ14Sx34rQkVTlC1K9qP51OI2H7o": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "CreateMatchLambdaFunction"
            },
            "CodeSha256": "9CjeQRCDiDN14pCog3k9NVu3DAKHgPtu/C+yMfa6crk="
          }
        },
        "ListMatchesLambdaVersioneYQiGx3lEGCLPZlOgQmB7ZZ5MNL4jRcll8Kr1piMaU": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "ListMatchesLambdaFunction"
            },
            "CodeSha256": "9CjeQRCDiDN14pCog3k9NVu3DAKHgPtu/C+yMfa6crk="
          }
        },
        "WsConnectLambdaVersioncp2idmDHmnHHumuSmLjViAtKxU7zUBe2iuHqr4UyI": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "WsConnectLambdaFunction"
            },
            "CodeSha256": "9CjeQRCDiDN14pCog3k9NVu3DAKHgPtu/C+yMfa6crk="
          }
        },
        "WsDefaultLambdaVersionYtzkqeZ4Bcw1UELysIuFph4tIUr0v6WXxKSFziOXY": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "WsDefaultLambdaFunction"
            },
            "CodeSha256": "9CjeQRCDiDN14pCog3k9NVu3DAKHgPtu/C+yMfa6crk="
          }
        },
        "WsDisconnectLambdaVersionEB49C9yxmAPrtxEVFN9NotyGhsmnGVPkaKxvMUKb6d4": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "WsDisconnectLambdaFunction"
            },
            "CodeSha256": "9CjeQRCDiDN14pCog3k9NVu3DAKHgPtu/C+yMfa6crk="
          }
        },
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "dev-tennis-club-tracker",
            "EndpointConfiguration": {
              "Types": [
                "EDGE"
              ]
            },
            "Policy": ""
          }
        },
        "ApiGatewayResourceClubs": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "clubs",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceMatches": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "matches",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodClubsOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'*'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceClubs"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodMatchesOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'*'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceMatches"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodClubsGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceClubs"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "GetClubsLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "GetClubsLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodMatchesPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceMatches"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "CreateMatchLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "CreateMatchLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodMatchesGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceMatches"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "ListMatchesLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "ListMatchesLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayDeployment1754804619028": {
          "Type": "AWS::ApiGateway::Deployment",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "dev"
          },
          "DependsOn": [
            "ApiGatewayMethodClubsOptions",
            "ApiGatewayMethodMatchesOptions",
            "ApiGatewayMethodClubsGet",
            "ApiGatewayMethodMatchesPost",
            "ApiGatewayMethodMatchesGet"
          ]
        },
        "GetClubsLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "GetClubsLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "CreateMatchLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "CreateMatchLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "ListMatchesLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "ListMatchesLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "WebsocketsApi": {
          "Type": "AWS::ApiGatewayV2::Api",
          "Properties": {
            "Name": "dev-tennis-club-tracker-websockets",
            "RouteSelectionExpression": "$request.body.action",
            "Description": "Serverless Websockets",
            "ProtocolType": "WEBSOCKET"
          }
        },
        "WsConnectWebsocketsIntegration": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "WebsocketsApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":apigateway:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":lambda:path/2015-03-31/functions/",
                  {
                    "Fn::GetAtt": [
                      "WsConnectLambdaFunction",
                      "Arn"
                    ]
                  },
                  "/invocations"
                ]
              ]
            }
          }
        },
        "WsDisconnectWebsocketsIntegration": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "WebsocketsApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":apigateway:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":lambda:path/2015-03-31/functions/",
                  {
                    "Fn::GetAtt": [
                      "WsDisconnectLambdaFunction",
                      "Arn"
                    ]
                  },
                  "/invocations"
                ]
              ]
            }
          }
        },
        "WsDefaultWebsocketsIntegration": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "WebsocketsApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":apigateway:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":lambda:path/2015-03-31/functions/",
                  {
                    "Fn::GetAtt": [
                      "WsDefaultLambdaFunction",
                      "Arn"
                    ]
                  },
                  "/invocations"
                ]
              ]
            }
          }
        },
        "WsConnectLambdaPermissionWebsockets": {
          "Type": "AWS::Lambda::Permission",
          "DependsOn": [
            "WebsocketsApi",
            "WsConnectLambdaFunction"
          ],
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "WsConnectLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com"
          }
        },
        "WsDisconnectLambdaPermissionWebsockets": {
          "Type": "AWS::Lambda::Permission",
          "DependsOn": [
            "WebsocketsApi",
            "WsDisconnectLambdaFunction"
          ],
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "WsDisconnectLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com"
          }
        },
        "WsDefaultLambdaPermissionWebsockets": {
          "Type": "AWS::Lambda::Permission",
          "DependsOn": [
            "WebsocketsApi",
            "WsDefaultLambdaFunction"
          ],
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "WsDefaultLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com"
          }
        },
        "SconnectWebsocketsRoute": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "WebsocketsApi"
            },
            "RouteKey": "$connect",
            "AuthorizationType": "NONE",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "WsConnectWebsocketsIntegration"
                  }
                ]
              ]
            }
          }
        },
        "SdisconnectWebsocketsRoute": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "WebsocketsApi"
            },
            "RouteKey": "$disconnect",
            "AuthorizationType": "NONE",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "WsDisconnectWebsocketsIntegration"
                  }
                ]
              ]
            }
          }
        },
        "SdefaultWebsocketsRoute": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "WebsocketsApi"
            },
            "RouteKey": "$default",
            "AuthorizationType": "NONE",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "WsDefaultWebsocketsIntegration"
                  }
                ]
              ]
            }
          }
        },
        "WebsocketsDeploymentStage": {
          "Type": "AWS::ApiGatewayV2::Stage",
          "Properties": {
            "ApiId": {
              "Ref": "WebsocketsApi"
            },
            "StageName": "dev",
            "Description": "Serverless Websockets",
            "DeploymentId": {
              "Ref": "WebsocketsDeploymentgLhOv36Uvzqz0C2qpcUpmUlblqvIxx2UXkz3nqHd0"
            }
          }
        },
        "WebsocketsDeploymentgLhOv36Uvzqz0C2qpcUpmUlblqvIxx2UXkz3nqHd0": {
          "Type": "AWS::ApiGatewayV2::Deployment",
          "DependsOn": [
            "SconnectWebsocketsRoute",
            "SdisconnectWebsocketsRoute",
            "SdefaultWebsocketsRoute"
          ],
          "Properties": {
            "ApiId": {
              "Ref": "WebsocketsApi"
            },
            "Description": "Serverless Websockets"
          }
        },
        "ClubsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "tennis-club-tracker-dev-Clubs",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "clubId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "clubId",
                "KeyType": "HASH"
              }
            ]
          }
        },
        "UsersTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "tennis-club-tracker-dev-Users",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "userId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "userId",
                "KeyType": "HASH"
              }
            ]
          }
        },
        "MatchesTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "tennis-club-tracker-dev-Matches",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "matchId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "clubId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "matchId",
                "KeyType": "HASH"
              }
            ],
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "byClub",
                "KeySchema": [
                  {
                    "AttributeName": "clubId",
                    "KeyType": "HASH"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ]
          }
        },
        "ConnectionsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "tennis-club-tracker-dev-Connections",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "connectionId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "clubId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "connectionId",
                "KeyType": "HASH"
              }
            ],
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "byClub",
                "KeySchema": [
                  {
                    "AttributeName": "clubId",
                    "KeyType": "HASH"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ]
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-us-west-2-50484812-2351",
          "Export": {
            "Name": "sls-tennis-club-tracker-dev-ServerlessDeploymentBucketName"
          }
        },
        "GetClubsLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "GetClubsLambdaVersionlILSQM0f8kup9YC5fVmnIRCgtNPXQy5fOn3ih0ibSPM"
          },
          "Export": {
            "Name": "sls-tennis-club-tracker-dev-GetClubsLambdaFunctionQualifiedArn"
          }
        },
        "CreateMatchLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "CreateMatchLambdaVersionuIwL3hnLScIrNlyZ14Sx34rQkVTlC1K9qP51OI2H7o"
          },
          "Export": {
            "Name": "sls-tennis-club-tracker-dev-CreateMatchLambdaFunctionQualifiedArn"
          }
        },
        "ListMatchesLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "ListMatchesLambdaVersioneYQiGx3lEGCLPZlOgQmB7ZZ5MNL4jRcll8Kr1piMaU"
          },
          "Export": {
            "Name": "sls-tennis-club-tracker-dev-ListMatchesLambdaFunctionQualifiedArn"
          }
        },
        "WsConnectLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "WsConnectLambdaVersioncp2idmDHmnHHumuSmLjViAtKxU7zUBe2iuHqr4UyI"
          },
          "Export": {
            "Name": "sls-tennis-club-tracker-dev-WsConnectLambdaFunctionQualifiedArn"
          }
        },
        "WsDefaultLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "WsDefaultLambdaVersionYtzkqeZ4Bcw1UELysIuFph4tIUr0v6WXxKSFziOXY"
          },
          "Export": {
            "Name": "sls-tennis-club-tracker-dev-WsDefaultLambdaFunctionQualifiedArn"
          }
        },
        "WsDisconnectLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "WsDisconnectLambdaVersionEB49C9yxmAPrtxEVFN9NotyGhsmnGVPkaKxvMUKb6d4"
          },
          "Export": {
            "Name": "sls-tennis-club-tracker-dev-WsDisconnectLambdaFunctionQualifiedArn"
          }
        },
        "ServiceEndpoint": {
          "Description": "URL of the service endpoint",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                "/dev"
              ]
            ]
          },
          "Export": {
            "Name": "sls-tennis-club-tracker-dev-ServiceEndpoint"
          }
        },
        "ServiceEndpointWebsocket": {
          "Description": "URL of the service endpoint",
          "Value": {
            "Fn::Join": [
              "",
              [
                "wss://",
                {
                  "Ref": "WebsocketsApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                "/dev"
              ]
            ]
          },
          "Export": {
            "Name": "sls-tennis-club-tracker-dev-ServiceEndpointWebsocket"
          }
        }
      }
    }
  }
}